#ifndef DEFS_HPP_
#define DEFS_HPP_
//========================================================================================
// Athena++ astrophysical MHD code
// Copyright(C) 2014 James M. Stone <jmstone@princeton.edu> and other code contributors
// Licensed under the 3-clause BSD License, see LICENSE file for details
//========================================================================================
//! \file defs.hpp.in
//! \brief Template file for defs.hpp.  When the configure.py script is run, a new
//! defs.hpp file will be created (overwriting the last) from this template.  This new
//! file contains Athena++ specific cpp macros and definitions set by configure.

//----------------------------------------------------------------------------------------
// macros which define physics and algorithms

// configure.py dict(definitions) string values:

// problem generator
#define PROBLEM_GENERATOR "@PROBLEM@"

// coordinate system
#define COORDINATE_SYSTEM "@COORDINATE_SYSTEM@"

// Riemann solver
#define RIEMANN_SOLVER "@RSOLVER@"

// configure.py dict(definitions) Boolean values:

// Equation of state
#define EQUATION_OF_STATE "@EQUATION_OF_STATE@"

// ChemNetwork class header file included in species.hpp
#define CHEMNETWORK_HEADER "@CHEMNETWORK_HEADER@"

// ChemRadiation integrator method, used in constructing ChemRadiationIntegratorTaskList
#define CHEMRADIATION_INTEGRATOR "@CHEMRADIATION_INTEGRATOR@"

// configure.py dict(definitions) Boolean 1/0 macros:

// use general EOS framework default=0 (false).
#define GENERAL_EOS @GENERAL_EOS@

// use EOS table default=0 (false).
#define EOS_TABLE_ENABLED @EOS_TABLE_ENABLED@

// non-barotropic equation of state (i.e. P not simply a func of rho)? default=1 (true)
#define NON_BAROTROPIC_EOS @NON_BAROTROPIC_EOS@

// include magnetic fields? default=0 (false)
#define MAGNETIC_FIELDS_ENABLED @MAGNETIC_FIELDS_ENABLED@

// include super-time-stepping? default=0 (false)
#define STS_ENABLED @STS_ENABLED@

// include self gravity? default=0 (false)
#define SELF_GRAVITY_ENABLED @SELF_GRAVITY_ENABLED@

// include chemistry? default=0 (false)
#define CHEMISTRY_ENABLED @CHEMISTRY_ENABLED@

// include radiative transfer in chemistry calculations? default=0 (false)
#define CHEMRADIATION_ENABLED @CHEMRADIATION_ENABLED@

// include nonrelativistic radiative transfer? default=0 (false)
#define NR_RADIATION_ENABLED @NR_RADIATION_ENABLED@

// include radiative transfer evolved with implicit method? default=0 (false)
#define IM_RADIATION_ENABLED @IM_RADIATION_ENABLED@

// include cosmic ray transport? default=0 (false)
#define CR_ENABLED @CR_ENABLED@

// include cosmic ray diffusion? default=0 (false)
#define CRDIFFUSION_ENABLED @CRDIFFUSION_ENABLED@

// enable special or general relativity? default=0 (false)
#define RELATIVISTIC_DYNAMICS @RELATIVISTIC_DYNAMICS@

// enable general relativity? default=0 (false)
#define GENERAL_RELATIVITY @GENERAL_RELATIVITY@

// use single precision floating-point values (binary32)? default=0 (false; use binary64)
#define SINGLE_PRECISION_ENABLED @SINGLE_PRECISION_ENABLED@

// use double precision for HDF5 output? default=0 (false; write out binary32)
#define H5_DOUBLE_PRECISION_ENABLED @H5_DOUBLE_PRECISION_ENABLED@

// compile with debug symbols and use optional sections of source code? default=0 (false)
#define DEBUG @DEBUG_OPTION@

// configure.py dict(definitions) Boolean string macros:
// (these options have the latter (false) option as defaults, unless noted otherwise)

// make use of FFT? (FFT or NO_FFT)
#define @FFT_OPTION@

// MPI parallelization (MPI_PARALLEL or NOT_MPI_PARALLEL)
#define @MPI_OPTION@

// OpenMP parallelization (OPENMP_PARALLEL or NOT_OPENMP_PARALLEL)
#define @OPENMP_OPTION@

// HDF5 output (HDF5OUTPUT or NO_HDF5OUTPUT)
#define @HDF5_OPTION@

// FFTW library (FFT or NO_FFT)
#define @FFT_OPTION@

// CVODE solver (CVODE or NO_CVODE)
#define @CVODE_OPTION@

// try/throw/catch C++ exception handling (ENABLE_EXCEPTIONS or DISABLE_EXCEPTIONS)
// (enabled by default)
#define @EXCEPTION_HANDLING_OPTION@

// compiler options
#define COMPILED_WITH "@COMPILER_CHOICE@"
#define COMPILER_COMMAND "@COMPILER_COMMAND@"
#define COMPILED_WITH_OPTIONS "@COMPILER_FLAGS@" // NOLINT

//----------------------------------------------------------------------------------------
// macros associated with numerical algorithm (rarely modified)

#define NHYDRO @NHYDRO_VARIABLES@
#define NFIELD @NFIELD_VARIABLES@
#define NWAVE @NWAVE_VALUE@
#define NSCALARS @NUMBER_PASSIVE_SCALARS@
#define NSPECIES @NUMBER_CHEMICAL_SPECIES@
#define NGHOST @NUMBER_GHOST_CELLS@
#define NGRAV @NGRAV_VARIABLES@
#define NCR @NCR_VARIABLES@   // cosmic ray transport module variable
#define NRAD @NRAD_VARIABLES@  // Radiation variables for history output
#define MAX_NSTAGE 6     // maximum number of stages per cycle for time-integrator
#define MAX_NREGISTER 3  // maximum number of (u, b) register pairs for time-integrator

//----------------------------------------------------------------------------------------
// general purpose macros (never modified)

// all constants specified to 17 total digits of precision = max_digits10 for "double"
#define PI 3.1415926535897932
#define TWO_PI 6.2831853071795862
#define SQRT2 1.4142135623730951
#define ONE_OVER_SQRT2 0.70710678118654752
#define ONE_3RD 0.33333333333333333
#define TWO_3RD 0.66666666666666667
#define TINY_NUMBER 1.0e-20
#define BIG_NUMBER 1.0e+10
#define HUGE_NUMBER 1.0e+36
#define SQR(x) ( (x)*(x) )
#define CUBE(x) ( (x)*(x)*(x) )
#define SIGN(x) ( ((x) < 0.0) ? -1.0 : 1.0 )
#define PI_FOUR_POWER 97.409091034002415
#define ONE_PI_FOUR_POWER 0.010265982254684

#ifdef ENABLE_EXCEPTIONS
#define ATHENA_ERROR(x) throw std::runtime_error(x.str().c_str())
#else
#define ATHENA_ERROR(x) std::cout << x.str(); std::exit(EXIT_FAILURE)
#endif

#endif // DEFS_HPP_
